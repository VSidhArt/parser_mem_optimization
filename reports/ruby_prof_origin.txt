Measure Mode: memory
Thread ID: 80
Fiber ID: 60
Total: 11723128.000000
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 26.77  3138600.000 3138600.000     0.000     0.000    10001   String#split                   
 26.00  3724800.000 3047680.000     0.000 677120.000     8464   <Class::Date>#parse            
 10.62  10983600.000 1245120.000     0.000 9738480.000       10   Array#each                     
  7.98  935960.000 935960.000     0.000     0.000    23399   String#upcase                  
  5.78  677120.000 677120.000     0.000     0.000    16928   Regexp#match                   
  5.77  5416400.000 675920.000     0.000 4740480.000    16898   Array#map                      
  3.67  430080.000 430080.000     0.000     0.000    10752   Hash#merge                     
  2.89  338560.000 338560.000     0.000     0.000     8464   Date#iso8601                   
  2.89  338560.000 338560.000     0.000     0.000     8464   <Module::Optimized>#parse_session /home/vadim/projects/parser_mem_optimization/optimized.rb:25
  1.98  232240.000 232240.000     0.000     0.000     3073   Array#sort                     
  1.05  122880.000 122880.000     0.000     0.000     3072   String#+                       
  1.05  122880.000 122880.000     0.000     0.000     3072   Integer#to_s                   
  0.64  255080.000 75400.000     0.000 179680.000     1536   Array#any?                     
  0.52  61480.000 61480.000     0.000     0.000     1537   Array#join                     
  0.52  61440.000 61440.000     0.000     0.000     1536   Array#reverse                  
  0.52  61440.000 61440.000     0.000     0.000     1536   Class#new                      
  0.52  61440.000 61440.000     0.000     0.000     1536   Array#select                   
  0.52  61440.000 61440.000     0.000     0.000     1536   <Module::Optimized>#parse_user /home/vadim/projects/parser_mem_optimization/optimized.rb:16
  0.29  113320.000 34160.000     0.000 79160.000    10000   Array#all?                     
  0.00  11723088.000   328.000     0.000 11722760.000        1   <Module::Optimized>#work       /home/vadim/projects/parser_mem_optimization/optimized.rb:43
  0.00    120.000   120.000     0.000     0.000        1   <Class::IO>#write              
  0.00     80.000    80.000     0.000     0.000        1   Array#uniq                     
  0.00     80.000    80.000     0.000     0.000        1   <Class::IO>#read               
  0.00     40.000    40.000     0.000     0.000        1   Kernel#dup                     
  0.00     80.000    40.000     0.000    40.000        1   JSON::Ext::Generator::GeneratorMethods::Hash#to_json 
  0.00  11723128.000    40.000     0.000 11723088.000        1   [global]#                      benchmarks/ruby_prof_bench.rb:11
  0.00      0.000     0.000     0.000     0.000        1   JSON::Ext::Generator::State#initialize_copy 
  0.00      0.000     0.000     0.000     0.000        1   Kernel#initialize_dup          
  0.00      0.000     0.000     0.000     0.000    14789   Date#<=>                       
  0.00      0.000     0.000     0.000     0.000     8464   Integer#div                    
  0.00      0.000     0.000     0.000     0.000     8464   String#[]=                     
  0.00      0.000     0.000     0.000     0.000     8464   MatchData#end                  
  0.00      0.000     0.000     0.000     0.000     8464   MatchData#begin                
  0.00      0.000     0.000     0.000     0.000     8464   String#gsub!                   
  0.00      0.000     0.000     0.000     0.000     1536   Array#max                      
  0.00      0.000     0.000     0.000     0.000     1536   Array#sum                      
  0.00      0.000     0.000     0.000     0.000    16928   String#to_i                    
  0.00  7398960.000     0.000     0.000 7398960.000        7   <Module::Optimized>#collect_stats_from_users /home/vadim/projects/parser_mem_optimization/optimized.rb:35
  0.00      0.000     0.000     0.000     0.000     1536   Optimized::User#initialize     /home/vadim/projects/parser_mem_optimization/optimized.rb:10
  0.00      0.000     0.000     0.000     0.000     1539   Array#count                    
  0.00      0.000     0.000     0.000     0.000     8464   Array#push                     
  0.00      0.000     0.000     0.000     0.000        1   Array#include?                 

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
